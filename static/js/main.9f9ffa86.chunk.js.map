{"version":3,"sources":["Components/Home.js","Components/AmountInput.js","Components/DateInput.js","Components/Summary.js","Components/Deposit.js","Components/Withdraw.js","App.js","drizzleOptions.js","Components/Loading.js","Components/LoadingContainer.js","store.js","index.js"],"names":["Home","state","endTime","Date","now","withdraw","renderTimeleft","result","concat","toLocaleTimeString","react_default","a","createElement","style","backgroundColor","height","row","gutter","padding","col","span","font","width","src","alt","card","es_button","Component","AmountInput","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputValue","maxAmount","Number","web3","utils","fromWei","balance","amountChange","_this2","marks","0","float","account","input","step","min","max","value","onChange","e","target","prefix","suffix","slider","margin","drizzleConnect","accounts","accountBalances","deposit","amount","dispatch","type","DateInput","justify","date_picker","time_picker","Title","Typography","Paragraph","TextArea","Input","Summary","onCommentChange","_ref","setState","comment","onConfirm","_this$state","inputDate","gasFee","toWei","console","log","contracts","Jonbur","methods","send","then","receipt","showConfirmScreen","saveReceipt","drizzle","toLocaleString","commentLimit","visible","_this$state2","minWidth","left","strong","textAlign","fontSize","level","marginBottom","marginTop","placeholder","autosize","minRows","maxRows","typography","color","block","onClick","modal","centered","progress","strokeColor","from","to","percent","status","contextTypes","PropTypes","object","Step","Steps","Deposit","current","onAmountChange","renderResult","txHash","transactionHash","title","subTitle","href","rel","extra","key","reset","_this$props","className","Deposit_Title","visibleResult","renderTitle","boxShadow","borderRadius","steps","size","direction","description","Components_AmountInput","DateInput_DateInput","Components_Summary","Countdown","Statistic","deadline","Withdraw","componentDidMount","reciept","Withdraw_Title","format","valueStyle","fontWeight","disabled","Header","Layout","Content","Footer","App","chanceContent","renderContent","Home_Home","Components_Deposit","Components_Withdraw","renderFooter","layout","lineHeight","menu","theme","mode","selectedKeys","onSelect","goto","Item","options","fallback","url","events","SimpleStorage","polls","Loading","role","aria-label","drizzleStatus","initialized","Children","only","children","LoadingContainer","fetchTodos","appRootSaga","TODOS_FETCH","TODOS_RECEIVED","initialState","update","_len","arguments","length","args","Array","_key","assign","apply","todos","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","takeEvery","_marked2","appReducers","undefined","action","inputError","parseFloat","_unused","appSagas","store","generateStore","drizzleOptions","ReactDOM","render","drizzle_react","Components_LoadingContainer","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9f9ffa86.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Card, Button } from 'antd';\n\n\nexport default class Home extends Component {\n    state = {\n        endTime: Date.now() + 90 * 60,\n        withdraw: false,\n    }\n\n    renderTimeleft = endTime => {\n        // TODO: 시간 포맷 정하고 그에 맞춰서 return 하기\n        if (endTime < Date.now()) {\n            return `Time Left: 00:00:00`\n        } else {\n            const result = endTime - Date.now()\n            return `Time Left: ${(new Date(result)).toLocaleTimeString()}`\n        }\n    }\n    render() {\n        return (\n            <div style={{backgroundColor: '#003368', height: '100%'}}>\n                <Row gutter={16} style={{padding: '50px'}}>\n                    <Col span={12} style={{backgroundColor:'white'}}>\n                        <h2 style={{font: 'Bold 3em Avenir'}}>Hang in there.</h2>\n                        <img style={{width:'inherit'}} src=\"vault.png\" alt=\"vault\"/>\n                    </Col>\n                    <Col span={12}>\n                        <Card>\n                            <Button>Login with Metamask</Button>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Input, Slider } from 'antd';\nimport { drizzleConnect } from \"drizzle-react\";\nimport web3 from 'web3';\n\n\nclass AmountInput extends Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            inputValue: 0,\n            maxAmount: Number(web3.utils.fromWei(props.balance, \"ether\")),\n        };\n    }\n\n    componentDidMount() {\n        this.props.amountChange(Number(web3.utils.fromWei(this.props.balance, \"ether\")));\n    }\n\n    render() {\n        const { maxAmount } = this.state;\n        const { inputValue } = this.props;\n        var marks = {\n            0: '0 ETH',\n            // 100: maxAmount,\n        }\n        marks[maxAmount] = 'MAX';\n        return (\n            <Row>\n                <p style={{ float: 'right' }}>{this.props.account}</p><br/>\n                <h3 style={{ float: 'right' }}>Balance: {this.state.maxAmount}ETH</h3>\n                <Input step={0.01} min={0} max={this.state.maxAmount} value={inputValue} onChange={e => this.props.amountChange(e.target.value)} style={{ font: '2em' }} prefix=\"Ξ\" suffix=\"ETH\" />\n                <Slider step={0.01} min={0} max={this.state.maxAmount} value={inputValue} onChange={e => this.props.amountChange(e)} style={{ margin: 20 }} marks={marks} />\n            </Row>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        account: state.accounts[0],\n        balance: state.accountBalances[state.accounts[0]],\n        inputValue: state.deposit.amount,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        amountChange: amount => dispatch({type: 'UPDATE_AMOUNT', value: amount}),\n    };\n}\n\nexport default drizzleConnect(AmountInput, mapStateToProps, mapDispatchToProps);","import React, { Component } from 'react';\nimport { Row, Col, DatePicker, TimePicker } from 'antd';\n\nexport default class DateInput extends Component {\n    state = {\n        \n    };\n\n    render() {\n        return (\n            <Row justify={'space-between'}>\n                <Col span={14}>\n                    <DatePicker style={{ width: 280 }} />\n                </Col>\n                <Col span={8}>\n                    <TimePicker style={{ width: 168 }} />\n                </Col>\n            </Row>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Row, Col, Typography, Input, Button, Modal, Progress } from 'antd';\nimport web3 from 'web3';\nimport { drizzleConnect } from \"drizzle-react\";\nimport PropTypes from 'prop-types'\n\nconst { Title, Paragraph } = Typography;\nconst { TextArea } = Input;\n\nclass Summary extends Component {\n    constructor(props, context) {\n        super(props);\n        this.contracts = context.drizzle.contracts;\n\n        this.state = {\n            endTime: (new Date(Date.now())).toLocaleString(),\n            comment: null,\n            commentLimit: false,\n            visible: false,\n            gasFee: 0.002108,\n            inputDate: 1,\n        };\n    }\n\n    onCommentChange = ({ target: { value } }) => {\n        // TODO: 140자 제한 두고, 제한 넘으면 commentLimit -> true\n        this.setState({\n            comment: value,\n        })\n    }\n\n    onConfirm = e => {\n        const { inputValue } = this.props;\n        const { inputDate, gasFee } = this.state;\n        const amount = web3.utils.toWei((inputValue - gasFee) + \"\", \"ether\");\n        console.log(amount, gasFee);\n        this.contracts.Jonbur.methods.deposit(inputDate, '').send({ value: amount }).then(receipt => {\n            console.log(receipt);\n            this.props.showConfirmScreen();\n            this.props.saveReceipt(receipt);\n        });\n    }\n\n    render() {\n        const { endTime, comment, commentLimit, visible, gasFee } = this.state;\n        const { inputValue } = this.props;\n        const balance = inputValue * 1 - gasFee;\n\n        return (\n            <Row gutter={8} style={{ width: '60%', minWidth: '320px', margin: 'auto', left: '-24px' }}>\n                <Col>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>{inputValue} ETH</Paragraph>\n                </Col>\n                <Col span={6}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>- Gas Fee</Paragraph>\n                </Col>\n                <Col span={18}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>{gasFee} ETH</Paragraph>\n                </Col>\n                <Col span={24} style={{ width: '110%' }}>\n                    <hr />\n                </Col>\n                <Col span={6}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>Deposit</Paragraph>\n                </Col>\n                <Col span={18}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>{balance} ETH</Paragraph>\n                </Col>\n                <Col>\n                    <Title strong level={1} style={{ textAlign: 'center', marginBottom: '0.1em' }}>{balance} ETH</Title>\n                    <Paragraph strong style={{ textAlign: 'center' }}>will be tied up until</Paragraph>\n                    <Title strong level={3} style={{ textAlign: 'center', marginTop: '0' }}>{endTime}</Title>\n                </Col>\n                <Col>\n                    <TextArea\n                        value={comment}\n                        onChange={this.onCommentChange}\n                        placeholder={'Add a comment'}\n                        autosize={{ minRows: 2, maxRows: 6 }}\n                    />\n                    {\n                        commentLimit ?\n                            <Typography\n                                style={{ fontSize: '0.8em', color: 'red' }}>\n                                Comment cannot exceed 140 characters\n                                </Typography>\n                            : null\n                    }\n                </Col>\n                <Col span={12}>\n                    <Button type=\"primary\" block style={{ marginTop: '1em' }} onClick={this.onConfirm}>\n                        Confirm\n                    </Button>\n                </Col>\n                <Col span={12}>\n                    <Button type=\"default\" block style={{ marginTop: '1em' }}>\n                        Go Back\n                    </Button>\n                </Col>\n                <Modal centered visible={visible}>\n                    <p>\n                        Did you know..\n                    </p>\n                    <p>\n                        Fun facts about Jonbur\n                    </p>\n                    <Progress\n                        strokeColor={{\n                            from: '#108ee9',\n                            to: '#87d068',\n                        }}\n                        percent={99.9}\n                        status=\"active\"\n                    />\n                </Modal>\n            </Row>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        inputValue: state.deposit.amount,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        showConfirmScreen: () => dispatch({type: 'SHOW_CONFIRM_SCREEN'}),\n        saveReceipt: (receipt) => dispatch({type: 'SAVE_RECEIPT', value: receipt}),\n    };\n}\n\nSummary.contextTypes = {\n    drizzle: PropTypes.object\n}\n\nexport default drizzleConnect(Summary, mapStateToProps, mapDispatchToProps);","import React, { Component } from \"react\";\n\nimport { drizzleConnect } from \"drizzle-react\";\nimport AmountInput from \"./AmountInput\";\nimport DateInput from \"./DateInput\";\nimport Summary from \"./Summary\";\nimport { Card, Typography, Steps, Result, Button } from 'antd';\n\nconst { Title } = Typography;\nconst { Step } = Steps;\n\nconst renderTitle = (current, visibleResult) => {\n    if (visibleResult) {\n        return `You're all set.`\n    }\n    switch (current) {\n        case 0:\n            return 'Keep your ethereum.'\n        case 1:\n            return 'Select the date.'\n        case 2:\n            return 'Review your transaction.'\n        default:\n            return 'Keep your ethereum'\n    }\n}\n\nclass Deposit extends Component {\n    onChange = current => {\n        console.log('onChange:', current);\n        this.setState({ current });\n    };\n\n    onAmountChange = value => {\n        this.setState({ inputValue: value })\n    }\n\n    renderResult = () => {\n        const txHash = this.props.receipt.transactionHash;\n        return (\n            <Result\n                status=\"success\"\n                title=\"Successfully jonbured your ether!\"\n                style={{padding: \"48px 0\"}}\n                subTitle={\n                    <span>\n                        <p>\n                            Transaction hash: {txHash}<br />\n                            Check with <a href={`https://ropsten.etherscan.io/tx/${txHash}`} target=\"_blank\" rel=\"noopener noreferrer\">Etherscan.io</a>\n                        </p>\n                        <p>\n                            Confirmation takes 1-5 minutes, please wait.\n                        </p>\n                    </span>\n                }\n                extra={[\n                    <Button type=\"primary\" key=\"console\" onClick={() => this.props.reset()}>Withdraw</Button>,\n                    <Button key=\"buy\" onClick={() => this.props.reset()}>Jonbur Again</Button>,\n                ]}\n            />\n        )\n    }\n\n    render() {\n        const { showConfirmScreen, current } = this.props;\n        return (\n            <div>\n                <div className=\"topBackground\" />\n                <div className=\"bottom\">\n                    <div className=\"card\">\n                        <Title level={2} style={{ font: 'Bold 3em Avenir', color: 'white' }}>{renderTitle(current, showConfirmScreen)}</Title>\n                        <Card style={{ boxShadow: '0px 3px 6px #00000029', borderRadius: '10px' }}>\n                            {showConfirmScreen ?\n                                this.renderResult() :\n                                <Steps size={'small'} direction=\"vertical\" current={current} onChange={this.props.onChange}>\n                                    <Step title=\"Amount\" description={current < 2 ? <AmountInput /> : null} />\n                                    <Step title=\"Date\" description={current < 2 ? <DateInput /> : null} />\n                                    <Step title=\"Summary\" description={current === 2 ? <Summary /> : null} />\n                                </Steps>\n                            }\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        showConfirmScreen: state.deposit.showConfirmScreen,\n        current: state.deposit.current,\n        receipt: state.deposit.receipt,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        reset: () => dispatch({type: 'RESET_DEPOSIT'}),\n        onChange: (current) => dispatch({type: 'UPDATE_STEP', value: current }),\n    };\n}\n\nexport default drizzleConnect(Deposit, mapStateToProps, mapDispatchToProps);","import React, { Component } from \"react\";\nimport { Typography, Button, Statistic, Card } from 'antd';\nimport { drizzleConnect } from \"drizzle-react\";\nimport PropTypes from 'prop-types'\nconst { Countdown } = Statistic;\nconst { Title } = Typography;\n\nconst deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 4; // Moment is also OK\n\nclass Withdraw extends Component {\n    constructor(props, context) {\n        super(props);\n        this.contracts = context.drizzle.contracts;\n        this.state = {\n            withdraw: false,\n        }\n    }\n\n    componentDidMount = () => {\n        // Get deadline\n        // Set deadline in reducer\n    }\n\n    onClick = () => {\n        console.log(this.contracts);\n        this.contracts.Jonbur.methods.withdraw().send().then(reciept => console.log(reciept));\n    }\n\n    render() {\n        // const Background = \"vault.png\"\n        const { showConfirmScreen } = this.props;\n        return (\n            <div>\n                <div className=\"topBackground\" />\n                <div className=\"bottom\">\n                    <div className=\"card\">\n                        <Card style={{ boxShadow: '0px 3px 6px #00000029', borderRadius: '10px' }}>\n                            {showConfirmScreen ?\n                                this.renderResult() :\n                                <div>\n                                    <Title level={2} style={{ textAlign: 'center', font: 'Bold 3em Avenir' }}>Time Left: </Title>\n                                    <Countdown className=\"titleFont\" value={deadline} format=\"DD:HH:mm:ss\" valueStyle={{ textAlign: 'center', font: 'Bold 1em Avenir' }} />\n                                    <div style={{textAlign: 'center', margin: '40px'}}>\n                                        <p style={{backgroundColor:'#ececec', margin:'30px', padding:'20px', borderRadius: '10px', height: '150px', fontSize: '1.2em', fontWeight: '500'}}>\n                                            존버는 승리한다 아자아자\n                                        </p>\n                                        <Button type=\"primary\" disabled={this.state.withdraw} onClick={() => this.onClick()}> Withdraw </Button>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n}\n\nWithdraw.contextTypes = {\n    drizzle: PropTypes.object\n}\n\nexport default drizzleConnect(Withdraw, mapStateToProps, mapDispatchToProps);","import React, { Component } from \"react\";\n\nimport 'antd/dist/antd.css';\nimport \"./App.css\";\n\nimport {  drizzleConnect } from 'drizzle-react';\nimport Home from './Components/Home';\nimport Deposit from './Components/Deposit';\nimport Withdraw from './Components/Withdraw';\nimport { Layout, Menu } from 'antd';\nconst { Header, Content, Footer } = Layout;\n// const Caver = require('caver-js');\n// const caver = new Caver('https://api.baobab.klaytn.net:8651/');\n// drizzle.web3 = caver;\n// console.log(caver);\n\nclass App extends Component {\n  state = {\n    current: '2'\n  }\n  chanceContent = e => {\n    this.setState({\n      current: e.key\n    })\n  }\n\n  renderContent = current => {\n    switch (current) {\n      case '1':\n        return <Home />\n      case '2':\n        return <Deposit visibleResult={false} />\n      case '3':\n        return <Withdraw />\n      default:\n        return <Home />\n    }\n  }\n\n  renderFooter = current => {\n    if (current === '2' || current === '4') return <Footer style={{ textAlign: 'center' }}>Team TACO ©2019 Created by TEAM TACO</Footer>\n    else return <Footer style={{ textAlign: 'center', backgroundColor: '#003368', color: 'white' }}>Team TACO ©2019 Created by TEAM TACO</Footer>\n  }\n  render() {\n    const {current} = this.props;\n    return (\n          <Layout className=\"layout\">\n            <Header>\n              <div className=\"logo\" style={{ lineHeight: '64px' }}>\n                Jonbur.\n          </div>\n              <Menu\n                theme={'dark'}\n                mode=\"horizontal\"\n                selectedKeys={[current]}\n                style={{ lineHeight: '64px' }}\n                onSelect={e => this.props.goto(e.key)}\n              >\n                <Menu.Item key=\"1\">Home</Menu.Item>\n                <Menu.Item key=\"2\">Deposit</Menu.Item>\n                <Menu.Item key=\"3\">Withdraw</Menu.Item>\n              </Menu>\n            </Header>\n            <Content style={{ height: '85vh' }}>\n              {this.renderContent(current)}\n            </Content>\n            {this.renderFooter(current)}\n          </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state,\n    current: state.menu.current,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    goto: value => dispatch({ type: 'GOTO', value: value }),\n  };\n}\n\nexport default drizzleConnect(App, mapStateToProps, mapDispatchToProps);\n","// import SimpleStorage from \"./contracts/SimpleStorage.json\";\n// import ComplexStorage from \"./contracts/ComplexStorage.json\";\n// import TutorialToken from \"./contracts/TutorialToken.json\";\nimport Jonbur from \"./contracts/Jonbur.json\";\n\nconst options = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      // url: \"ws://127.0.0.1:8545\"\n      url: \"https://sip1.skalenodes.com:10051\"\n    }\n  },\n  contracts: [Jonbur],\n  events: {\n    Jonbur: [\"HodlerAdded\", \"HodlerRewarded\"],\n    SimpleStorage: [\"StorageSet\"]\n  },\n  polls: {\n    accounts: 1500\n  }\n};\n\nexport default options;\n","import React, { Component, Children } from 'react'\n\nclass Loading extends Component {\n    constructor(props, context) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.web3.status === 'failed') {\n            return (\n                // Display a web3 warning.\n                <main>\n                    <h1><span role=\"img\" aria-label=\"warning\">⚠️</span></h1>\n                    <p>This browser has no connection to the Ethereum network. Please use the Chrome/FireFox extension MetaMask, or dedicated Ethereum browsers Mist or Parity.</p>\n                </main>\n            )\n        }\n\n        if (this.props.drizzleStatus.initialized) {\n            // Load the dapp.\n            return Children.only(this.props.children)\n        }\n\n        return (\n            // Display a loading indicator.\n            <main>\n                <h1><span role=\"img\" aria-label=\"setting\">⚙️</span></h1>\n                <p>Loading dapp...</p>\n            </main>\n        )\n    }\n}\n\nexport default Loading","import Loading from './Loading.js'\nimport { drizzleConnect } from 'drizzle-react'\n\n// May still need this even with data function to refresh component on updates for this contract.\nconst mapStateToProps = state => {\n  return {\n    drizzleStatus: state.drizzleStatus,\n    web3: state.web3\n  }\n}\n\nconst LoadingContainer = drizzleConnect(Loading, mapStateToProps);\n\nexport default LoadingContainer","import { put, takeEvery } from 'redux-saga/effects'\nimport { generateStore } from 'drizzle'\nimport drizzleOptions from './drizzleOptions'\n\n// actions\nconst TODOS_FETCH = 'MY_APP/TODOS_FETCH'\nconst TODOS_RECEIVED = 'MY_APP/TODOS_RECEIVED'\n\nconst initialState = {\n    amount: 0,\n    showConfirmScreen: false,\n    current: 0,\n    receipt: '0x0',\n}\n\nconst update = (state, ...args) => {\n    return Object.assign({}, state, ...args);\n}\n// reducers\nconst depositReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'UPDATE_AMOUNT':\n            // return Object.assign({}, state, { amount: action.value });\n            var amount;\n            var inputError = false;\n            try {\n                amount = parseFloat(action.value);\n            } catch {\n                amount = 0;\n                inputError = true;\n            }\n            return update(state, { amount: amount, inputError });\n        case 'SHOW_CONFIRM_SCREEN':\n            return update(state, { showConfirmScreen: true });\n        case 'RESET_DEPOSIT':\n            return update(state, { amount: 0, inputError: false, showConfirmScreen: false, current: 0 });\n        case 'UPDATE_STEP':\n            return update(state, { current: action.value });\n        case 'SAVE_RECEIPT':\n            return update(state, { receipt: action.value });\n        default:\n            return state;\n    }\n}\n\nconst menuReducer = (state = { current: \"2\" }, action) => {\n    switch (action.type) {\n        case 'GOTO':\n            return update(state, { current: action.value });\n        default:\n            return state;\n    }\n}\n\n// fetch data from service using sagas\nfunction* fetchTodos() {\n    //  const todos = yield fetch('https://jsonplaceholder.typicode.com/todos')\n    //  .then(response => response.json())\n    const todos = {}\n    yield put({ type: TODOS_RECEIVED, todos })\n}\n\n// Combine all your redux concerns\n\n// app root saga\nfunction* appRootSaga() {\n    yield takeEvery(TODOS_FETCH, fetchTodos)\n}\n\n// app Reducers and Sagas\nconst appReducers = { deposit: depositReducer, menu: menuReducer }\nconst appSagas = [appRootSaga]\n\nconst store = generateStore({\n    drizzleOptions,\n    appReducers,\n    appSagas\n})\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport options from \"./drizzleOptions\";\nimport { DrizzleProvider } from 'drizzle-react';\nimport LoadingContainer from \"./Components/LoadingContainer\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n    <DrizzleProvider options={options} store={store}>\n        <LoadingContainer>\n            <App />\n        </LoadingContainer>\n    </DrizzleProvider>, document.getElementById('root'));\n"],"sourceRoot":""}