{"version":3,"sources":["Components/Home.js","Components/AmountInput.js","Components/DateInput.js","Components/Summary.js","Components/Deposit.js","Components/Dashboard.js","Components/Withdraw.js","App.js","drizzleOptions.js","Components/Loading.js","Components/LoadingContainer.js","store.js","index.js"],"names":["Home","state","endTime","Date","now","withdraw","renderTimeleft","result","concat","toLocaleTimeString","react_default","a","createElement","style","backgroundColor","height","row","gutter","padding","col","span","font","width","src","alt","card","es_button","Component","AmountInput","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputValue","maxAmount","Number","web3","utils","fromWei","balance","amountChange","_this2","marks","0","float","account","input","step","min","max","value","onChange","e","target","prefix","suffix","slider","margin","drizzleConnect","accounts","accountBalances","deposit","amount","dispatch","type","DateInput","date","dateString","console","log","_this$props","inputDate","inputTime","justify","date_picker","defaultValue","dateChange","time_picker","timeChange","time","Title","Typography","Paragraph","TextArea","Input","Summary","onCommentChange","_ref","setState","comment","onConfirm","withdrawDate","gasFee","toWei","showModal","contracts","Jonbur","methods","unix","send","then","receipt","hideModal","showConfirmScreen","saveReceipt","drizzle","toLocaleString","commentLimit","visible","_this$state","_this$props2","modal","minWidth","left","strong","textAlign","fontSize","level","marginBottom","marginTop","format","placeholder","autosize","minRows","maxRows","typography","color","block","onClick","es_modal","centered","closable","footer","progress","strokeColor","from","to","percent","status","showInfo","contextTypes","PropTypes","object","Step","Steps","Deposit","current","onAmountChange","renderResult","txHash","transactionHash","title","subTitle","href","rel","extra","key","gotoWithdraw","reset","className","Deposit_Title","visibleResult","renderTitle","boxShadow","borderRadius","steps","size","direction","description","Components_AmountInput","Components_DateInput","Components_Summary","Countdown","Statistic","usd","Dashboard","renderButton","obj","spent","es_icon","renderDescription","toDateString","substr","valueStyle","renderProfit","icon","toFixed","renderCard","index","maxWidth","fontWeight","Dashboard_Title","data","reverse","map","v","Math","random","deadline","Withdraw","componentDidMount","reciept","Withdraw_Title","Withdraw_Countdown","disabled","Header","Layout","Content","Footer","App","chanceContent","renderContent","Home_Home","Components_Dashboard","Components_Withdraw","renderFooter","layout","position","length","menu","goto","options","fallback","url","events","SimpleStorage","polls","Loading","role","aria-label","drizzleStatus","initialized","Children","only","children","LoadingContainer","fetchTodos","appRootSaga","TODOS_FETCH","TODOS_RECEIVED","initialState","moment","year","month","day","hour","minute","second","update","_len","arguments","args","Array","_key","assign","apply","todos","regenerator_default","wrap","_context","prev","next","put","stop","_marked","_context2","takeEvery","_marked2","appReducers","undefined","action","inputError","parseFloat","_unused","appSagas","store","generateStore","drizzleOptions","ReactDOM","render","drizzle_react","Components_LoadingContainer","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.df7391f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Card, Button } from 'antd';\n\n\nexport default class Home extends Component {\n    state = {\n        endTime: Date.now() + 90 * 60,\n        withdraw: false,\n    }\n\n    renderTimeleft = endTime => {\n        // TODO: 시간 포맷 정하고 그에 맞춰서 return 하기\n        if (endTime < Date.now()) {\n            return `Time Left: 00:00:00`\n        } else {\n            const result = endTime - Date.now()\n            return `Time Left: ${(new Date(result)).toLocaleTimeString()}`\n        }\n    }\n    render() {\n        return (\n            <div style={{backgroundColor: '#003368', height: '100%'}}>\n                <Row gutter={16} style={{padding: '50px'}}>\n                    <Col span={12} style={{backgroundColor:'white'}}>\n                        <h2 style={{font: 'Bold 3em Avenir'}}>Hang in there.</h2>\n                        <img style={{width:'inherit'}} src=\"vault.png\" alt=\"vault\"/>\n                    </Col>\n                    <Col span={12}>\n                        <Card>\n                            <Button>Login with Metamask</Button>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Input, Slider } from 'antd';\nimport { drizzleConnect } from \"drizzle-react\";\nimport web3 from 'web3';\n\n\nclass AmountInput extends Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            inputValue: 0,\n            maxAmount: Number(web3.utils.fromWei(props.balance, \"ether\")),\n        };\n    }\n\n    componentDidMount() {\n        this.props.amountChange(Number(web3.utils.fromWei(this.props.balance, \"ether\")));\n    }\n\n    render() {\n        const { maxAmount } = this.state;\n        const { inputValue } = this.props;\n        var marks = {\n            0: '0 ETH',\n            // 100: maxAmount,\n        }\n        marks[maxAmount] = 'MAX';\n        return (\n            <Row>\n                <p style={{ float: 'right' }}>{this.props.account}</p><br/>\n                <h3 style={{ float: 'right' }}>Balance: {this.state.maxAmount}ETH</h3>\n                <Input step={0.01} min={0} max={this.state.maxAmount} value={inputValue} onChange={e => this.props.amountChange(e.target.value)} style={{ font: '2em' }} prefix=\"Ξ\" suffix=\"ETH\" />\n                <Slider step={0.01} min={0} max={this.state.maxAmount} value={inputValue} onChange={e => this.props.amountChange(e)} style={{ margin: 20 }} marks={marks} />\n            </Row>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        account: state.accounts[0],\n        balance: state.accountBalances[state.accounts[0]],\n        inputValue: state.deposit.amount,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        amountChange: amount => dispatch({type: 'UPDATE_AMOUNT', value: amount}),\n    };\n}\n\nexport default drizzleConnect(AmountInput, mapStateToProps, mapDispatchToProps);","import React, { Component } from 'react';\nimport { Row, Col, DatePicker, TimePicker, Input } from 'antd';\nimport { drizzleConnect } from \"drizzle-react\";\n// import moment from 'moment';\n\n\nclass DateInput extends Component {\n    constructor(props, context) {\n        super(props);\n\n        this.state = {\n            \n        };\n    }\n\n    onChange(date, dateString) {\n        console.log(date, dateString);\n      }\n\n    render() {\n        const { inputDate, inputTime } = this.props;\n        // const { year, month, day, hour, minute, second } = this.props;\n        // console.log(withdrawDate);\n        return (\n            <Row justify={'space-between'}>\n                <Col span={14}>\n                    <DatePicker defaultValue={inputDate} onChange={e => this.props.dateChange(e)}/>\n                    {/* <Input placeholder=\"today\" type=\"date\"/> */}\n                </Col>\n                <Col span={8}>\n                    <TimePicker defaultValue={inputTime} onChange={e => this.props.timeChange(e)}/>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        account: state.accounts[0],\n        balance: state.accountBalances[state.accounts[0]],\n        inputDate: state.deposit.date,\n        inputTime: state.deposit.time,\n        // year : state.deposit.year,\n        // month : state.deposit.month,\n        // day : state.deposit.day,\n        // hour : state.deposit.hour,\n        // minute : state.deposit.minute,\n        // second : state.deposit.second,\n        // withdrawDate: state.deposit.withdrawDate,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dateChange: date => dispatch({type: 'UPDATE_DATE', date: date}),\n        timeChange: time => dispatch({type: 'UPDATE_TIME', time: time}),\n    };\n}\n\nexport default drizzleConnect(DateInput, mapStateToProps, mapDispatchToProps);","import React, { Component } from 'react';\nimport { Row, Col, Typography, Input, Button, Modal, Progress } from 'antd';\nimport web3 from 'web3';\nimport { drizzleConnect } from \"drizzle-react\";\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\n\nconst { Title, Paragraph } = Typography;\nconst { TextArea } = Input;\n\nclass Summary extends Component {\n    constructor(props, context) {\n        super(props);\n        this.contracts = context.drizzle.contracts;\n\n        this.state = {\n            endTime: (new Date(Date.now())).toLocaleString(),\n            comment: null,\n            commentLimit: false,\n            visible: false,\n            gasFee: 0.002108,\n            // inputDate: 1,\n        };\n    }\n\n    onCommentChange = ({ target: { value } }) => {\n        // TODO: 140자 제한 두고, 제한 넘으면 commentLimit -> true\n        this.setState({\n            comment: value,\n        })\n    }\n\n    onConfirm = e => {\n        const { inputValue, withdrawDate } = this.props;\n        const { gasFee } = this.state;\n        const amount = web3.utils.toWei((inputValue - gasFee) + \"\", \"ether\");\n        console.log(amount, gasFee);\n        this.props.showModal();\n        this.contracts.Jonbur.methods.deposit(withdrawDate.unix(), '').send({ value: amount }).then(receipt => {\n            console.log(receipt);\n            this.props.hideModal();\n            this.props.showConfirmScreen();\n            this.props.saveReceipt(receipt);\n        });\n    }\n\n    render() {\n        const { endTime, comment, commentLimit, gasFee } = this.state;\n        const { inputValue, modal, withdrawDate } = this.props;\n        const balance = inputValue * 1 - gasFee;\n\n        return (\n            <Row gutter={8} style={{ width: '60%', minWidth: '320px', margin: 'auto', left: '-24px' }}>\n                <Col>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>{inputValue} ETH</Paragraph>\n                </Col>\n                <Col span={6}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>- Gas Fee</Paragraph>\n                </Col>\n                <Col span={18}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>{gasFee} ETH</Paragraph>\n                </Col>\n                <Col span={24} style={{ width: '110%' }}>\n                    <hr />\n                </Col>\n                <Col span={6}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>Deposit</Paragraph>\n                </Col>\n                <Col span={18}>\n                    <Paragraph strong style={{ textAlign: 'right', fontSize: '0.8em' }}>{balance} ETH</Paragraph>\n                </Col>\n                <Col>\n                    <Title strong level={1} style={{ textAlign: 'center', marginBottom: '0.1em' }}>{balance} ETH</Title>\n                    <Paragraph strong style={{ textAlign: 'center' }}>will be tied up until</Paragraph>\n                    <Title strong level={3} style={{ textAlign: 'center', marginTop: '0' }}>{withdrawDate.format('YYYY-MM-DD, HH:mm:ss')}</Title>\n                </Col>\n                <Col>\n                    <TextArea\n                        value={comment}\n                        onChange={this.onCommentChange}\n                        placeholder={'Add a comment'}\n                        autosize={{ minRows: 2, maxRows: 6 }}\n                    />\n                    {\n                        commentLimit ?\n                            <Typography\n                                style={{ fontSize: '0.8em', color: 'red' }}>\n                                Comment cannot exceed 140 characters\n                                </Typography>\n                            : null\n                    }\n                </Col>\n                <Col span={12}>\n                    <Button type=\"primary\" block style={{ marginTop: '1em' }} onClick={this.onConfirm}>\n                        Confirm\n                    </Button>\n                </Col>\n                <Col span={12}>\n                    <Button type=\"default\" block style={{ marginTop: '1em' }}>\n                        Go Back\n                    </Button>\n                </Col>\n                <Modal \n                centered \n                visible={modal} \n                closable={false}\n                footer={null}\n                >\n                    <h3>\n                        Did you know..\n                    </h3>\n                    <p>\n                        <i>\n                            Fun facts about Jonbur\n                        </i>\n                    </p>\n                    <br/>\n                    <Progress\n                        strokeColor={{\n                            from: '#108ee9',\n                            to: '#87d068',\n                        }}\n                        percent={99.9}\n                        status=\"active\"\n                        showInfo={false}\n                    />\n                    <p style={{textAlign: 'center'}}>\n                        Pending transaction...\n                    </p>\n                </Modal>\n            </Row>\n        );\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        inputValue: state.deposit.amount,\n        modal: state.deposit.modal,\n        withdrawDate: state.deposit.withdrawDate,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        showConfirmScreen: () => dispatch({ type: 'SHOW_CONFIRM_SCREEN' }),\n        saveReceipt: (receipt) => dispatch({ type: 'SAVE_RECEIPT', value: receipt }),\n        showModal: () => dispatch({ type: 'SHOW_MODAL' }),\n        hideModal: () => dispatch({ type: 'HIDE_MODAL' }),\n    };\n}\n\nSummary.contextTypes = {\n    drizzle: PropTypes.object\n}\n\nexport default drizzleConnect(Summary, mapStateToProps, mapDispatchToProps);","import React, { Component } from \"react\";\n\nimport { drizzleConnect } from \"drizzle-react\";\nimport AmountInput from \"./AmountInput\";\nimport DateInput from \"./DateInput\";\nimport Summary from \"./Summary\";\nimport { Card, Typography, Steps, Result, Button } from 'antd';\n\nconst { Title } = Typography;\nconst { Step } = Steps;\n\nconst renderTitle = (current, visibleResult) => {\n    if (visibleResult) {\n        return `You're all set.`\n    }\n    switch (current) {\n        case 0:\n            return 'Keep your ethereum.'\n        case 1:\n            return 'Select the date.'\n        case 2:\n            return 'Review your transaction.'\n        default:\n            return 'Keep your ethereum'\n    }\n}\n\nclass Deposit extends Component {\n    onChange = current => {\n        console.log('onChange:', current);\n        this.setState({ current });\n    };\n\n    onAmountChange = value => {\n        this.setState({ inputValue: value })\n    }\n\n    renderResult = () => {\n        const txHash = this.props.receipt.transactionHash;\n        return (\n            <Result\n                status=\"success\"\n                title=\"Successfully jonbured your ether!\"\n                style={{padding: \"48px 0\"}}\n                subTitle={\n                    <span>\n                        <p>\n                            Transaction hash: {txHash}<br />\n                            Check with <a href={`https://ropsten.etherscan.io/tx/${txHash}`} target=\"_blank\" rel=\"noopener noreferrer\">Etherscan.io</a>\n                        </p>\n                        <p>\n                            Confirmation takes 1-5 minutes, please wait.\n                        </p>\n                    </span>\n                }\n                extra={[\n                    <Button type=\"primary\" key=\"console\" onClick={() => this.props.gotoWithdraw()}>Withdraw</Button>,\n                    <Button key=\"buy\" onClick={() => this.props.reset()}>Jonbur Again</Button>,\n                ]}\n            />\n        )\n    }\n\n    render() {\n        const { showConfirmScreen, current } = this.props;\n        return (\n            <div>\n                <div className=\"topBackground\" />\n                <div className=\"bottom\">\n                    <div className=\"card\">\n                        <Title level={2} style={{ font: 'Bold 3em Avenir', color: 'white' }}>{renderTitle(current, showConfirmScreen)}</Title>\n                        <Card style={{ boxShadow: '0px 3px 6px #00000029', borderRadius: '10px' }}>\n                            {showConfirmScreen ?\n                                this.renderResult() :\n                                <Steps size={'small'} direction=\"vertical\" current={current} onChange={this.props.onChange}>\n                                    <Step title=\"Amount\" description={current < 2 ? <AmountInput /> : null} />\n                                    <Step title=\"Date\" description={current < 2 ? <DateInput /> : null} />\n                                    <Step title=\"Summary\" description={current === 2 ? <Summary /> : null} />\n                                </Steps>\n                            }\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        showConfirmScreen: state.deposit.showConfirmScreen,\n        current: state.deposit.current,\n        receipt: state.deposit.receipt,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        reset: () => dispatch({type: 'RESET_DEPOSIT'}),\n        onChange: (current) => dispatch({type: 'UPDATE_STEP', value: current }),\n        gotoWithdraw: () => dispatch({ type: 'GOTO', value: '3'})\n    };\n}\n\nexport default drizzleConnect(Deposit, mapStateToProps, mapDispatchToProps);","import React, { Component } from 'react';\nimport { drizzleConnect } from \"drizzle-react\";\nimport { Card, Typography, Button, Icon, Statistic } from 'antd';\nconst { Title } = Typography;\nconst { Countdown } = Statistic;\n\n// TODO: ETH-USD 가져오기\nconst usd = 5708;\nclass Dashboard extends Component {\n    constructor(props, context) {\n        super(props);\n    }\n\n    renderButton = (obj) => {\n        if (obj.spent) {\n            return <Button type=\"disabled\"><Icon type=\"check\" />Empty</Button>\n        } else {\n            if (new Date(obj.date) < new Date()) {\n                return <Button type=\"primary\"><Icon type=\"unlock\" />Withdraw</Button>\n            }\n            return <Button type=\"disabled\"><Icon type=\"lock\" />Locked</Button>\n        }\n    }\n\n    renderDescription = (obj) => {\n        const date = new Date(obj.date);\n        if (obj.spent) {\n            return `Emptied on ${date.toDateString().substr(4)}`\n        } else {\n            if (new Date(obj.date) < new Date()) {\n                return `It's time to withdraw`\n            } else if (date - Date.now() < 1000 * 60 * 60 * 24) {\n                return <Countdown value={obj.date} format=\"HH:mm:ss left\" valueStyle={{ fontSize: '10px' }} />\n            }\n            return `Locked until ${date.toDateString().substr(4)}`\n        }\n    }\n\n    renderProfit = (obj) => {\n        var color = obj.value < usd ? 'green' : 'red';\n        var icon = obj.value < usd ? 'caret-up' : 'caret-down'\n        // TODO: profit 계산하기\n        var profit = 23600;\n        return <span style={{ color: color }}> (<Icon type={icon} />{(profit / 100).toFixed(2)} USD)</span>\n    }\n\n    renderCard = (obj) => {\n        const date = new Date(obj.date);\n        return (\n            <Card key={obj.index} style={{ boxShadow: '0px 3px 6px #00000029', borderRadius: '10px', maxWidth: '600px', margin: 'auto', marginBottom: '10px' }}>\n                <div style={{ float: 'right', textAlign: 'right' }}>\n                    <div style={{ color: 'ececec', fontSize: '10px', margin: '-6px 0 6px 0' }}>{this.renderDescription(obj)}</div>\n                    {this.renderButton(obj)}\n                </div>\n                <div style={{ margin: -8, width: '60%' }}>\n                    <div style={{ color: 'ececec', fontSize: '10px', margin: '-6px 0 6px 0' }}>{date.toDateString().substr(4)}</div>\n                    <div style={{ fontSize: '20px', fontWeight: '500' }}>{obj.amount.toFixed(3)} ETH</div>\n                    <div style={{ fontSize: '10px', color: '#c2c2c2' }}>{`~${(usd * obj.amount / 100).toFixed(2)} USD`} {this.renderProfit(obj)}</div>\n                </div>\n            </Card>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"topBackground\" />\n                <div className=\"bottom\">\n                    <div className=\"card\">\n                        <Title level={2} style={{ font: 'Bold 3em Avenir', color: 'white' }}>Dashboard</Title>\n                        {[...data].reverse().map((v, index) => { return this.renderCard(v) })}\n                    </div>\n                    <a href=\"#\" className=\"float\">\n                        <Icon type=\"plus\"/>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst data = [\n    {\n        index: 0,\n        date: Date.now() - 30000,\n        comment: 'Hello',\n        amount: Math.random() * 10,\n        spent: true,\n        value: Math.random() * 10000,\n    },\n    {\n        index: 1,\n        date: Date.now() - 20000,\n        comment: 'Hello',\n        amount: Math.random() * 10,\n        spent: false,\n        value: Math.random() * 10000,\n    },\n    {\n        index: 2,\n        date: Date.now() + 10000,\n        comment: 'Hello',\n        amount: Math.random() * 10,\n        spent: false,\n        value: Math.random() * 10000,\n    },\n    {\n        index: 3,\n        date: Date.now() + 100000,\n        comment: 'Hello',\n        amount: Math.random() * 10,\n        spent: false,\n        value: Math.random() * 10000,\n    },\n    {\n        index: 4,\n        date: Date.now() + 1000 * 60 * 60 * 24 + 5000,\n        comment: 'Hello',\n        amount: Math.random() * 10,\n        spent: false,\n        value: Math.random() * 10000,\n    },\n]\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n        account: state.accounts[0],\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dateChange: date => dispatch({ type: 'UPDATE_DATE', date: date }),\n        timeChange: time => dispatch({ type: 'UPDATE_TIME', time: time }),\n    };\n}\n\nexport default drizzleConnect(Dashboard, mapStateToProps, mapDispatchToProps);","import React, { Component } from \"react\";\nimport { Typography, Button, Statistic, Card } from 'antd';\nimport { drizzleConnect } from \"drizzle-react\";\nimport PropTypes from 'prop-types'\nconst { Countdown } = Statistic;\nconst { Title } = Typography;\n\nconst deadline = Date.now() + 1000 * 60 * 60 * 24 * 2 + 1000 * 4; // Moment is also OK\n\nclass Withdraw extends Component {\n    constructor(props, context) {\n        super(props);\n        this.contracts = context.drizzle.contracts;\n        this.state = {\n            withdraw: false,\n        }\n    }\n\n    componentDidMount = () => {\n        // Get deadline\n        // Set deadline in reducer\n    }\n\n    onClick = () => {\n        console.log(this.contracts);\n        this.contracts.Jonbur.methods.withdraw().send().then(reciept => console.log(reciept));\n    }\n\n    render() {\n        // const Background = \"vault.png\"\n        const { showConfirmScreen } = this.props;\n        return (\n            <div>\n                <div className=\"topBackground\" />\n                <div className=\"bottom\">\n                    <div className=\"card\">\n                        <Card style={{ boxShadow: '0px 3px 6px #00000029', borderRadius: '10px' }}>\n                            {showConfirmScreen ?\n                                this.renderResult() :\n                                <div>\n                                    <Title level={2} style={{ textAlign: 'center', font: 'Bold 3em Avenir' }}>Time Left: </Title>\n                                    <Countdown className=\"titleFont\" value={deadline} format=\"DD:HH:mm:ss\" valueStyle={{ textAlign: 'center', font: 'Bold 1em Avenir' }} />\n                                    <div style={{textAlign: 'center', margin: '40px'}}>\n                                        <p style={{backgroundColor:'#ececec', margin:'30px', padding:'20px', borderRadius: '10px', height: '150px', fontSize: '1.2em', fontWeight: '500'}}>\n                                            존버는 승리한다 아자아자\n                                        </p>\n                                        <Button type=\"primary\" disabled={this.state.withdraw} onClick={() => this.onClick()}> Withdraw </Button>\n                                    </div>\n                                </div>\n                            }\n                        </Card>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n}\n\nWithdraw.contextTypes = {\n    drizzle: PropTypes.object\n}\n\nexport default drizzleConnect(Withdraw, mapStateToProps, mapDispatchToProps);","import React, { Component } from \"react\";\n\nimport 'antd/dist/antd.css';\nimport \"./App.css\";\n\nimport { drizzleConnect } from 'drizzle-react';\nimport Home from './Components/Home';\nimport Deposit from './Components/Deposit';\nimport Dashboard from './Components/Dashboard';\nimport Withdraw from './Components/Withdraw';\nimport { Layout, Menu, Icon } from 'antd';\nimport web3 from 'web3';\nconst { Header, Content, Footer } = Layout;\n// const Caver = require('caver-js');\n// const caver = new Caver('https://api.baobab.klaytn.net:8651/');\n// drizzle.web3 = caver;\n// console.log(caver);\n\nclass App extends Component {\n  state = {\n    current: '2'\n  }\n  chanceContent = e => {\n    this.setState({\n      current: e.key\n    })\n  }\n\n  renderContent = current => {\n    switch (current) {\n      case '1':\n        return <Home />\n      case '2':\n        // return <Deposit visibleResult={false} />\n        return <Dashboard/>\n        // return <Withdraw />\n      case '3':\n        return <Withdraw />\n      default:\n        return <Home />\n    }\n  }\n\n  renderFooter = current => {\n    if (current === '2' || current === '4') return <Footer style={{ textAlign: 'center' }}>Team TACO ©2019 Created by TEAM TACO</Footer>\n    else return <Footer style={{ textAlign: 'center', backgroundColor: '#003368', color: 'white' }}>Team TACO ©2019 Created by TEAM TACO</Footer>\n  }\n  render() {\n    const { current, balance, account } = this.props;\n    return (\n      <Layout className=\"layout\">\n        <Header style={{padding: '0 25px', position: 'fixed', width: '100%'}}>\n          {/* <div className=\"logo\">\n            Jonbur.\n          </div> */}\n          {/* <Menu\n            theme={'dark'}\n            mode=\"horizontal\"\n            selectedKeys={[current]}\n            style={{ lineHeight: '64px' }}\n            onSelect={e => this.props.goto(e.key)}\n          >\n            <Menu.Item key=\"1\">Home</Menu.Item>\n            <Menu.Item key=\"2\">Deposit</Menu.Item>\n            <Menu.Item key=\"3\">Withdraw</Menu.Item>\n          </Menu> */}\n          <Icon type=\"menu\" style={{color:'white', fontSize:'18px'}}/>\n\n          <div style={{ float: \"right\", color: \"white\", textAlign:\"right\" }}>\n            <div style={{height: '18px', color: \"#aeaeae\"}}>\n              {/* <p>Ethereum Mainnet</p> */}\n              {`\\n${account.substr(0, 6)}...${account.substr(account.length-4, account.length)}`}\n            </div>\n            {/* <div>\n              {web3.utils.fromWei(balance, \"ether\")} ETH\n            </div> */}\n          </div>\n\n        </Header>\n        <Content style={{ height: '85vh' }}>\n          {this.renderContent(current)}\n        </Content>\n        {this.renderFooter(current)}\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state,\n    current: state.menu.current,\n    account: state.accounts[0],\n    balance: state.accountBalances[state.accounts[0]],\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    goto: value => dispatch({ type: 'GOTO', value: value }),\n  };\n}\n\nexport default drizzleConnect(App, mapStateToProps, mapDispatchToProps);\n","// import SimpleStorage from \"./contracts/SimpleStorage.json\";\n// import ComplexStorage from \"./contracts/ComplexStorage.json\";\n// import TutorialToken from \"./contracts/TutorialToken.json\";\nimport Jonbur from \"./contracts/Jonbur.json\";\n\nconst options = {\n  web3: {\n    block: false,\n    fallback: {\n      type: \"ws\",\n      // url: \"ws://127.0.0.1:8545\"\n      url: \"https://sip1.skalenodes.com:10051\"\n    }\n  },\n  contracts: [Jonbur],\n  events: {\n    Jonbur: [\"HodlerAdded\", \"HodlerRewarded\"],\n    SimpleStorage: [\"StorageSet\"]\n  },\n  polls: {\n    accounts: 1500\n  }\n};\n\nexport default options;\n","import React, { Component, Children } from 'react'\n\nclass Loading extends Component {\n    constructor(props, context) {\n        super(props)\n    }\n\n    render() {\n        if (this.props.web3.status === 'failed') {\n            return (\n                // Display a web3 warning.\n                <main>\n                    <h1><span role=\"img\" aria-label=\"warning\">⚠️</span></h1>\n                    <p>This browser has no connection to the Ethereum network. Please use the Chrome/FireFox extension MetaMask, or dedicated Ethereum browsers Mist or Parity.</p>\n                </main>\n            )\n        }\n\n        if (this.props.drizzleStatus.initialized) {\n            // Load the dapp.\n            return Children.only(this.props.children)\n        }\n\n        return (\n            // Display a loading indicator.\n            <main>\n                <h1><span role=\"img\" aria-label=\"setting\">⚙️</span></h1>\n                <p>Loading dapp...</p>\n            </main>\n        )\n    }\n}\n\nexport default Loading","import Loading from './Loading.js'\nimport { drizzleConnect } from 'drizzle-react'\n\n// May still need this even with data function to refresh component on updates for this contract.\nconst mapStateToProps = state => {\n  return {\n    drizzleStatus: state.drizzleStatus,\n    web3: state.web3\n  }\n}\n\nconst LoadingContainer = drizzleConnect(Loading, mapStateToProps);\n\nexport default LoadingContainer","import { put, takeEvery } from 'redux-saga/effects'\nimport { generateStore } from 'drizzle'\nimport drizzleOptions from './drizzleOptions'\nimport moment from 'moment'\n\n// actions\nconst TODOS_FETCH = 'MY_APP/TODOS_FETCH'\nconst TODOS_RECEIVED = 'MY_APP/TODOS_RECEIVED'\n\nconst initialState = {\n    amount: 0,\n    showConfirmScreen: false,\n    current: 0,\n    receipt: '0x0',\n    date: moment(),\n    time: moment(),\n    year: moment().year(),\n    month: moment().month(),\n    day: moment().date(),\n    hour: moment().hour(),\n    minute: moment().minute(),\n    second: moment().second(),\n    withdrawDate: moment(),\n}\n\nconst update = (state, ...args) => {\n    return Object.assign({}, state, ...args);\n}\n// reducers\nconst depositReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'UPDATE_AMOUNT':\n            // return Object.assign({}, state, { amount: action.value });\n            var amount;\n            var inputError = false;\n            try {\n                amount = parseFloat(action.value);\n            } catch {\n                amount = 0;\n                inputError = true;\n            }\n            return update(state, { amount: amount, inputError });\n        case 'UPDATE_DATE':\n            var year = action.date.year();\n            var month = action.date.month();\n            var day = action.date.date();\n            var withdrawDate = moment().year(year).month(month).date(day).hour(state.hour).minute(state.minute).second(state.second);\n            // withdrawDate = withdrawDate.unix();\n            return update(state, { date: action.date, year: year, month: month, day: day, withdrawDate: withdrawDate });\n        case 'UPDATE_TIME':\n            var hour = action.time.hour();\n            var minute = action.time.minute();\n            var second = action.time.second();\n            withdrawDate = moment().year(state.year).month(state.month).date(state.day).hour(hour).minute(minute).second(second);\n            // withdrawDate = withdrawDate.unix();\n            return update(state, { time: action.time, hour: hour, minute: minute, second: second, withdrawDate: withdrawDate });\n        case 'SHOW_CONFIRM_SCREEN':\n            return update(state, { showConfirmScreen: true });\n        case 'RESET_DEPOSIT':\n            return update(state, { amount: 0, inputError: false, showConfirmScreen: false, current: 0 });\n        case 'UPDATE_STEP':\n            return update(state, { current: action.value });\n        case 'SAVE_RECEIPT':\n            return update(state, { receipt: action.value });\n        case 'SHOW_MODAL':\n            return update(state, { modal: true });\n        case 'HIDE_MODAL':\n            return update(state, { modal: false });\n        default:\n            return state;\n    }\n}\n\nconst menuReducer = (state = { current: \"2\" }, action) => {\n    switch (action.type) {\n        case 'GOTO':\n            return update(state, { current: action.value });\n        default:\n            return state;\n    }\n}\n\n// fetch data from service using sagas\nfunction* fetchTodos() {\n    //  const todos = yield fetch('https://jsonplaceholder.typicode.com/todos')\n    //  .then(response => response.json())\n    const todos = {}\n    yield put({ type: TODOS_RECEIVED, todos })\n}\n\n// Combine all your redux concerns\n\n// app root saga\nfunction* appRootSaga() {\n    yield takeEvery(TODOS_FETCH, fetchTodos)\n}\n\n// app Reducers and Sagas\nconst appReducers = { deposit: depositReducer, menu: menuReducer }\nconst appSagas = [appRootSaga]\n\nconst store = generateStore({\n    drizzleOptions,\n    appReducers,\n    appSagas\n})\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport options from \"./drizzleOptions\";\nimport { DrizzleProvider } from 'drizzle-react';\nimport LoadingContainer from \"./Components/LoadingContainer\";\nimport store from \"./store\";\n\n\nReactDOM.render(\n    <DrizzleProvider options={options} store={store}>\n        <LoadingContainer>\n            <App />\n        </LoadingContainer>\n    </DrizzleProvider>, document.getElementById('root'));\n"],"sourceRoot":""}